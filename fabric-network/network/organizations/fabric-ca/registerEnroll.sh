#!/bin/bash

function createMenufacturer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/peer0.menufacturer.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-menufacturer --tls.certfiles "${PWD}/organizations/fabric-ca/menufacturer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-menufacturer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-menufacturer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-menufacturer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-menufacturer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy peer0.menufacturer.com's CA cert to peer0.menufacturer.com's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/menufacturer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/msp/tlscacerts/ca.crt"

  # Copy menufacturer's CA cert to menufacturer's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/menufacturer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/tlsca/tlsca.peer0.menufacturer.com-cert.pem"

  # Copy menufacturer's CA cert to menufacturer's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/ca"
  cp "${PWD}/organizations/fabric-ca/menufacturer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/ca/ca.peer0.menufacturer.com-cert.pem"

  infoln "Registering menufacturer"
  set -x
  fabric-ca-client register --caname ca-menufacturer --id.name menufacturer --id.secret menufacturerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/menufacturer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-menufacturer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/menufacturer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-menufacturer --id.name menufactureradmin --id.secret menufactureradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/menufacturer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the menufacturer msp"
  set -x
  fabric-ca-client enroll -u https://menufacturer:menufacturerpw@localhost:7054 --caname ca-menufacturer -M "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/peers/peer0.menufacturer.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/menufacturer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/peers/peer0.menufacturer.com/msp/config.yaml"

  infoln "Generating the menufacturer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://menufacturer:menufacturerpw@localhost:7054 --caname ca-menufacturer -M "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/peers/peer0.menufacturer.com/tls" --enrollment.profile tls --csr.hosts peer0.menufacturer.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/menufacturer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer0's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/peers/peer0.menufacturer.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/peers/peer0.menufacturer.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/peers/peer0.menufacturer.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/peers/peer0.menufacturer.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/peers/peer0.menufacturer.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/peers/peer0.menufacturer.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-menufacturer -M "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/users/User1@peer0.menufacturer.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/menufacturer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/users/User1@peer0.menufacturer.com/msp/config.yaml"
  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://menufactureradmin:menufactureradminpw@localhost:7054 --caname ca-menufacturer -M "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/users/Admin@peer0.menufacturer.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/menufacturer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.menufacturer.com/users/Admin@peer0.menufacturer.com/msp/config.yaml"
}

function createMiddlemen() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/peer0.middlemen.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/peer0.middlemen.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-middlemen --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-middlemen.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-middlemen.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-middlemen.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-middlemen.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy mimiddlemenll's CA cert to middlemen's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem" "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/msp/tlscacerts/ca.crt"

  # Copy middlemen's CA cert to middlemen's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem" "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/tlsca/tlsca.peer0.middlemen.com-cert.pem"

  # Copy middlemen's CA cert to middlemen's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/ca"
  cp "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem" "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/ca/ca.peer0.middlemen.com-cert.pem"

  infoln "Registering peer0-middlemen"
  set -x
  fabric-ca-client register --caname ca-middlemen --id.name p0middlemen --id.secret p0middlemenpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering peer1-middlemen"
  set -x
  fabric-ca-client register --caname ca-middlemen --id.name p1middlemen --id.secret p1middlemenpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering peer2-middlemen"
  set -x
  fabric-ca-client register --caname ca-middlemen --id.name p2middlemen --id.secret p2middlemenpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-middlemen --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  fabric-ca-client register --caname ca-middlemen --id.name user2 --id.secret user2pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  fabric-ca-client register --caname ca-middlemen --id.name user3 --id.secret user3pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-middlemen --id.name middlemenadmin --id.secret middlemenadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer0-middlemen msp"
  set -x
  fabric-ca-client enroll -u https://p0middlemen:p0middlemenpw@localhost:8054 --caname ca-middlemen -M "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer0.middlemen.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer1-middlemen msp"
  set -x
  fabric-ca-client enroll -u https://p1middlemen:p1middlemenpw@localhost:8054 --caname ca-middlemen -M "${PWD}/organizations/peerOrganizations/peer1.middlemen.com/peers/peer1.middlemen.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the peer2-middlemen msp"
  set -x
  fabric-ca-client enroll -u https://p2middlemen:p2middlemenpw@localhost:8054 --caname ca-middlemen -M "${PWD}/organizations/peerOrganizations/peer2.middlemen.com/peers/peer2.middlemen.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer0.middlemen.com/msp/config.yaml"
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer1.middlemen.com/msp/config.yaml"
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer2.middlemen.com/msp/config.yaml"


  infoln "Generating the middlemen-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://p0middlemen:p0middlemenpw@localhost:8054 --caname ca-middlemen -M "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer0.middlemen.com/tls" --enrollment.profile tls --csr.hosts peer0.middlemen.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the p1middlemen-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://p1middlemen:p1middlemenpw@localhost:8054 --caname ca-middlemen -M "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer1.middlemen.com/tls" --enrollment.profile tls --csr.hosts peer1.middlemen.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the p2middlemen-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://p2middlemen:p2middlemenpw@localhost:8054 --caname ca-middlemen -M "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer2.middlemen.com/tls" --enrollment.profile tls --csr.hosts peer2.middlemen.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer0.middlemen.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer0.middlemen.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer0.middlemen.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer0.middlemen.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer0.middlemen.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer0.middlemen.com/tls/server.key"

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer1's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer1.middlemen.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer1.middlemen.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer1.middlemen.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer1.middlemen.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer1.middlemen.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer1.middlemen.com/tls/server.key"

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer1's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer2.middlemen.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer2.middlemen.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer2.middlemen.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer2.middlemen.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer2.middlemen.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/peers/peer2.middlemen.com/tls/server.key"


  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-middlemen -M "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/users/User1@peer0.middlemen.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  fabric-ca-client enroll -u https://user2:user2pw@localhost:8054 --caname ca-middlemen -M "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/users/User2@peer0.middlemen.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  fabric-ca-client enroll -u https://user3:user3pw@localhost:8054 --caname ca-middlemen -M "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/users/User2@peer0.middlemen.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/users/User1@peer0.middlemen.com/msp/config.yaml"
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/users/User2@peer0.middlemen.com/msp/config.yaml"
  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/users/User3@peer0.middlemen.com/msp/config.yaml"


  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://middlemenadmin:middlemenadminpw@localhost:8054 --caname ca-middlemen -M "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/users/Admin@peer0.middlemen.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/middlemen/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.middlemen.com/users/Admin@peer0.middlemen.com/msp/config.yaml"
}

function createConsumer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/peer0.consumer.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/peer0.consumer.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-consumer --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-consumer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-consumer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-consumer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-consumer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/peer0.consumer.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy peer0.consumer.com's CA cert to peer0.consumer.com's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/peer0.consumer.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/peer0.consumer.com/msp/tlscacerts/ca.crt"

  # Copy consumer's CA cert to consumer's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/peer0.consumer.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/peer0.consumer.com/tlsca/tlsca.peer0.consumer.com-cert.pem"

  # Copy consumer's CA cert to consumer's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/peer0.consumer.com/ca"
  cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/peer0.consumer.com/ca/ca.peer0.consumer.com-cert.pem"

  infoln "Registering consumer"
  set -x
  fabric-ca-client register --caname ca-consumer --id.name consumer --id.secret consumerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-consumer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-consumer --id.name consumeradmin --id.secret consumeradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the consumer msp"
  set -x
  fabric-ca-client enroll -u https://consumer:consumerpw@localhost:9054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/peer0.consumer.com/peers/peer0.consumer.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/peer0.consumer.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.consumer.com/peers/peer0.consumer.com/msp/config.yaml"

  infoln "Generating the consumer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://consumer:consumerpw@localhost:9054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/peer0.consumer.com/peers/peer0.consumer.com/tls" --enrollment.profile tls --csr.hosts peer0.consumer.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/peer0.consumer.com/peers/peer0.consumer.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/peer0.consumer.com/peers/peer0.consumer.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/peer0.consumer.com/peers/peer0.consumer.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/peer0.consumer.com/peers/peer0.consumer.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/peer0.consumer.com/peers/peer0.consumer.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/peer0.consumer.com/peers/peer0.consumer.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:9054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/peer0.consumer.com/users/User1@peer0.consumer.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/peer0.consumer.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.consumer.com/users/User1@peer0.consumer.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://consumeradmin:consumeradminpw@localhost:9054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/peer0.consumer.com/users/Admin@peer0.consumer.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/peer0.consumer.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/peer0.consumer.com/users/Admin@peer0.consumer.com/msp/config.yaml"
}

function createOrderer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/example.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/example.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:10054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/tlsca/tlsca.example.com-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:10054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:10054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls" --enrollment.profile tls --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:10054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp/config.yaml"
}
